syntax = "proto3";
package fr_proxy;

import "pdpb.proto";
import "kvrpcpb.proto";
import "gogoproto/gogo.proto";
import "rustproto.proto";

option (gogoproto.sizer_all) = true;
option (gogoproto.marshaler_all) = true;
option (gogoproto.unmarshaler_all) = true;
option (rustproto.lite_runtime_all) = true;

option java_package = "org.tikv.kvproto";

// A helper proxy for doing follower read crossing data centers.
service FollowerReadProxy {
    // For every transaction which wants to get timestamp and committed
    // indices for all target regions, it can call the RPC.
    // The first item of request stream will trigger the service to get
    // timestamp from PD.
    rpc GetTsAndCommittedIndices(stream Request) returns (Response) {}
}

message Request {
    repeated kvrpcpb.Context contexts = 1;
}

message Response {
    pdpb.Timestamp timestamp = 1;
    // If any of them are 0, TiDB can fallback to normal follower read.
    repeated uint64 committed_indices = 2;
}
